/**
 * This file was generated by mirror, do not edit it manually as it will be overwritten.
 *
 * You can find the docs and source code for mirror here: https://github.com/aosasona/mirror
 */

export type Language = string;

export type Address = {
	line_1: string | null;
	line_2: string | null;
	street: string;
	city: string;
	state: string;
	postal_code: string;
	country: string;
};

export type Tags = Record<string, string>;

export type Person = {
	first_name: string;
	last_name: string;
	age: number;
	address: Address;
	languages: Array<string>;
	grades?: Record<string, number>;
	tags: Record<string, string>;
	props?: any;
	created_at: string;
	updated_at: number | null;
	deleted_at: string | null;
	is_active: boolean;
	error: string;
};

export type Store = {
	key: string;
	value: string;
	meta: StateMeta;
};

export type StateMeta = {
	expires_at: string;
	created_at: string;
	meta: any;
	user: { user_id: string, role: 'admin' | 'user', tags: Array<string> };
};

export type UserWithNestedProperties = {
	first_name: string;
	last_name: string;
	stores: Array<Store>;
	other_store: Record<string, {
		key: string;
		value: string;
		meta: StateMeta;
	}>;
};

export type Collection = {
	items: Array<string>;
	description?: string;
	created_at: Date;
};

export type CreateUserFunc = (arg0: Person) => string;